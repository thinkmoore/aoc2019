type dir =
 | u(i32)
 | d(i32)
 | l(i32)
 | r(i32)

fun lookup(Xs : 'a list, N : i32) : 'a option =
  match Xs with
  | [] => none
  | X :: Xs => if N = 0 then some(X) else lookup(Xs, N - 1)
  end.

input wire(i32, dir list).
(*
wire(1, [r(8),u(5),l(5),d(3)]).
wire(2, [u(7),r(6),d(4),l(4)]).
*)
wire(1, [r(999),d(467),l(84),d(619),l(49),u(380),r(287),u(80),r(744),d(642),l(340),u(738),r(959),u(710),r(882),u(861),l(130),d(354),l(579),d(586),r(798),d(735),l(661),d(453),l(828),u(953),r(604),d(834),r(921),d(348),r(620),u(775),r(364),u(552),l(221),u(119),r(590),u(29),l(267),d(745),l(128),u(468),l(978),d(717),r(883),d(227),r(691),d(330),l(33),u(520),l(862),d(132),r(99),u(400),l(455),u(737),l(603),u(220),l(689),u(131),r(158),d(674),r(617),d(287),r(422),u(734),l(73),u(327),l(525),d(245),r(849),d(692),r(114),u(136),r(762),d(5),r(329),u(429),l(849),u(748),r(816),u(556),r(614),d(412),r(416),d(306),r(307),u(826),r(880),u(936),l(164),u(984),l(689),d(934),r(790),d(14),r(561),d(736),l(3),d(442),r(301),d(520),l(451),u(76),r(844),d(307),l(144),d(800),l(462),d(138),r(956),u(225),l(393),d(186),l(924),d(445),l(86),d(640),l(920),d(877),l(197),u(191),l(371),d(701),r(826),d(282),r(856),d(412),l(788),d(417),r(69),d(678),r(978),d(268),l(268),u(112),l(69),u(164),l(748),u(191),r(227),d(227),r(59),u(749),r(134),u(779),r(865),u(247),r(55),d(567),r(821),u(799),r(937),d(942),l(445),d(571),r(685),d(111),r(107),d(769),r(269),d(968),r(102),u(335),r(538),u(125),l(725),d(654),r(451),d(242),r(777),u(813),r(799),d(786),l(804),u(313),l(322),u(771),r(219),u(316),l(973),u(963),r(84),d(289),r(825),d(299),l(425),d(49),r(995),d(486),r(550),d(789),r(735),d(501),r(966),u(955),r(432),u(635),l(353),d(600),r(675),d(236),r(864),u(322),r(719),d(418),l(877),u(833),r(839),d(634),l(533),d(438),l(734),u(130),l(578),u(498),l(984),d(413),l(615),u(40),l(699),u(656),l(653),u(419),r(856),u(882),r(30),d(266),r(386),d(692),l(210),u(802),l(390),u(753),l(406),u(338),r(743),d(320),l(125),u(204),r(391),u(537),r(887),d(194),l(302),u(400),r(510),u(92),l(310),d(382),r(597),u(498),r(851),d(357),l(568),u(800),r(918),d(106),r(673),d(735),l(86),d(67),r(398),d(677),r(355),d(501),l(909),d(133),r(729),d(293),l(498),u(222),r(832),u(671),r(751),u(36),r(422),u(840),l(636),d(476),l(292),d(105),l(239),u(199),r(669),u(736),l(345),d(911),l(277),u(452),l(979),d(153),r(882),u(604),r(602),u(495),l(311),u(453),l(215),d(713),r(873)]).
wire(2, [l(996),u(773),l(865),d(472),l(988),d(570),l(388),u(458),l(87),u(885),l(115),u(55),r(75),u(582),r(695),u(883),r(83),u(285),r(96),d(244),l(647),d(359),r(136),u(107),r(912),u(871),l(844),u(395),l(63),u(899),l(205),d(137),r(549),u(221),l(859),d(429),l(809),u(127),r(304),u(679),l(511),u(144),r(926),u(95),l(805),u(811),r(42),d(248),l(546),d(644),l(551),d(897),r(368),d(391),l(224),u(164),l(490),d(991),l(146),d(615),r(536),u(247),r(10),u(998),l(957),d(233),r(706),d(926),r(760),u(438),r(270),d(983),r(134),u(738),l(262),u(301),l(480),d(635),l(702),d(715),r(479),u(500),r(19),d(291),r(368),u(203),r(305),d(999),r(106),u(355),l(683),d(298),r(90),u(968),l(254),d(936),r(89),u(496),r(253),u(688),r(99),u(637),l(783),d(451),r(673),d(762),r(997),d(50),l(488),u(551),l(871),u(388),r(949),d(371),r(584),d(908),l(880),u(523),r(557),u(436),r(520),u(587),l(56),u(18),r(397),u(541),r(660),d(444),r(51),u(187),r(221),u(902),r(726),u(303),r(97),d(817),r(185),d(218),l(240),d(67),l(259),u(334),r(821),u(629),r(21),d(970),r(282),u(155),r(555),d(678),l(99),d(570),r(863),d(405),r(941),u(584),l(303),d(109),l(871),u(180),r(595),d(226),l(670),d(943),l(127),u(647),r(452),d(570),r(75),d(284),r(414),u(404),r(515),u(993),r(408),u(488),r(890),d(318),l(415),u(969),r(769),d(976),l(732),u(1),r(489),u(655),r(930),u(638),r(649),d(254),r(161),u(287),l(659),d(26),l(477),d(821),l(124),u(538),r(17),d(711),l(203),u(888),r(904),u(648),l(908),d(65),l(215),u(283),r(698),u(28),r(72),u(214),r(499),d(89),r(489),d(58),r(949),d(91),l(710),u(960),l(755),d(402),l(27),d(873),r(61),u(607),r(57),d(548),r(369),u(622),l(244),u(19),r(61),d(606),r(928),d(968),r(10),d(988),r(816),u(500),r(915),d(400),r(546),d(283),l(627),d(919),l(259),u(337),r(374),u(795),l(355),d(989),l(224),d(77),l(872),u(901),r(476),u(765),l(320),u(768),l(937),d(437),r(141),d(822),l(326),d(324),l(498),u(994),l(518),d(857),r(973),d(681),l(710),d(590),l(879),u(499),r(488),d(151),l(242),u(988),l(944),u(683),l(24),u(491),r(823),d(246),r(872),d(654),r(28),u(581),l(142),u(31),r(435),d(686),l(147),d(102),r(952),d(607),l(959),d(929),l(46)]).

output wire_turn(i32, i32, i32, i32, i32).

wire_turn(W, 0, 0, 0, 0) :-
  wire(W, _).

wire_turn(W, N + 1, X, Y + A, C + A) :-
  wire_turn(W, N, X, Y, C),
  wire(W, Xs),
  some(u(A)) = lookup(Xs, N).  

wire_turn(W, N + 1, X, Y - A, C + A) :-
  wire_turn(W, N, X, Y, C),
  wire(W, Xs),
  some(d(A)) = lookup(Xs, N).

wire_turn(W, N + 1, X - A, Y, C + A) :-
  wire_turn(W, N, X, Y, C),
  wire(W, Xs),
  some(l(A)) = lookup(Xs, N).

wire_turn(W, N + 1, X + A, Y, C + A) :-
  wire_turn(W, N, X, Y, C),
  wire(W, Xs),
  some(r(A)) = lookup(Xs, N).

output wire_at(i32, i32, i32, i32, i32).

wire_at(W, N, X, Y, C) :-
  wire_turn(W, N, X, Y, C).

wire_at(W, N, X + 1, Y, C + 1) :-
  wire_at(W, N, X, Y, C),
  wire_turn(W, N + 1, XT, Y, _),
  XT > X.

wire_at(W, N, X - 1, Y, C + 1) :-
  wire_at(W, N, X, Y, C),
  wire_turn(W, N + 1, XT, Y, _),
  XT < X.

wire_at(W, N, X, Y + 1, C + 1) :-
  wire_at(W, N, X, Y, C),
  wire_turn(W, N + 1, X, YT, _),
  YT > Y.

wire_at(W, N, X, Y - 1, C + 1) :-
  wire_at(W, N, X, Y, C),
  wire_turn(W, N + 1, X, YT, _),
  YT < Y.

output intersection(i32, i32, i32, i32, i32, i32).

intersection(WA, WB, X, Y, X + Y, CA + CB) :-
  wire_at(WA, _, X, Y, CA),
  (X,Y) != (0,0),
  wire_at(WB, _, X, Y, CB),
  WA < WB.
